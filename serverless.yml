service: notes-app-api


package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs12.x
  stage: prod
  region: us-east-2



  environment:
    tableName: todo



  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-2:608011132312:table/todo"

functions:

  create:
    handler: create.main
    events:
      - http:
          path: todo
          method: post
          cors: true
          authorizer: aws_iam
  get:
    # Defines an HTTP API endpoint that calls the main function in get.js
    # - path: url path is /todo/{id}
    # - method: GET request
    handler: get.main
    events:
      - http:
          path: todo/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
    # Defines an HTTP API endpoint that calls the main function in list.js
    # - path: url path is /todo
    # - method: GET request
    handler: list.main
    events:
      - http:
          path: todo
          method: get
          cors: true
          authorizer: aws_iam
  update:
    # Defines an HTTP API endpoint that calls the main function in update.js
    # - path: url path is /todo/{id}
    # - method: PUT request
    handler: update.main
    events:
      - http:
          path: todo/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    # Defines an HTTP API endpoint that calls the main function in delete.js
    # - path: url path is /todo/{id}
    # - method: DELETE request
    handler: delete.main
    events:
      - http:
          path: todo/{id}
          method: delete
          cors: true
          authorizer: aws_iam
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}